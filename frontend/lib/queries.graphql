fragment AuthorDetailsFields on NodeWithAuthor {
    author {
        node {
            name
            firstName
            lastName
            avatar {
                url
            }
        }
    }
}

fragment FeaturedImageFields on NodeWithFeaturedImage {
    featuredImage {
        node {
            sourceUrl
        }
    }
}


fragment ContentFields on ContentNode {
    slug
    date

    ... on Page {
        title
        content
        ...FeaturedImageFields
    }

    ... on Post {
        title
        excerpt
        ...FeaturedImageFields
        ...AuthorDetailsFields
    }
}


fragment PostFields on Post {
    ...ContentFields
    categories {
        nodes {
            name
        }
    }
    tags {
        nodes {
            name
        }
    }
}


query PreviewPost($id: ID!, $idType: PostIdType!) {
    post(id: $id, idType: $idType) {
        databaseId
        slug
        status
    }
}

query GetALLPostsWithSlug {
    posts(first: 10000) {
        nodes {
            slug
        }
    }
}

query GetAllParentPagesAsSlug {
    pages(first: 10000, where: {parentIn: ""}) {
        nodes {
            slug
        }
    }
}

query PageDetailsByTitle($title: String!) {
    pages(where: {name: $title}) {
        nodes {
            id
            ...ContentFields
            parent {
                node {
                    __typename
                    slug
                    ... on Page {
                        title
                    }
                }
            }
        }
    }
}

query AllPostsAndWelcomePage {
    welcomePage: pages(where: { name: "about-us"}, first: 1) {
        nodes{
            children(first: 1, where: {orderby: {field: MENU_ORDER, order: ASC}}) {
                nodes {
                    __typename
                    ... ContentFields
                }
            }
        }
    }
    latestPosts: posts(first: 20, where: {orderby: {field: DATE, order: DESC}}) {
        nodes {
            ...ContentFields
        }
    }
}

# For Draft Post
query DraftPostBySlug($id: ID!) {
    post(id: $id, idType: DATABASE_ID) {
        ...PostFields
        content
    }
}

# For Published Post and More Posts
query PublishedPostAndMorePosts($slug: ID!) {
    post(id: $slug, idType: SLUG) {
        ...PostFields
        content
        revisions(first: 1, where: { orderby: { field: MODIFIED, order: DESC } }) {
            nodes {
                ...ContentFields
                content
            }
        }
    }
    posts(first: 4, where: { orderby: { field: DATE, order: DESC } }) {
        nodes {
            ...PostFields
        }
    }
}


query UnpublishedPosts {
    posts(first: 100, where: { status: PRIVATE }) {
        nodes {
            id
            title
            slug
            status
        }
    }
}

mutation GetGraphQLToken($username: String!, $password: String!) {
    login(input: {
        clientMutationId: "uniqueId",
        username: $username,
        password: $password,
    }) {
        refreshToken
    }
}

query ChildPagesByParentId($parentId: ID!) {
    pages(where: {parent: $parentId, orderby: {field: MENU_ORDER, order: ASC}}) {
        nodes {
            id
            ...ContentFields
        }
    }
}

query FetchMediaItemsWithBackgroundSet {
    mediaItems(where: {metaQuery: {metaArray: {key: "use-for-landing-page-hero-banner", value: "1"}}}) {
        nodes {
            mediaItemUrl
        }
    }
}
