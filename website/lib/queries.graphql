
query PreviewPost($id: ID!, $idType: PostIdType!) {
    post(id: $id, idType: $idType) {
        databaseId
        slug
        status
    }
}

query GetALLPostsWithSlug {
    posts(first: 10000) {
        edges {
            node {
                slug
            }
        }
    }
}

# Fetch all page slugs
query GetAllPagesAsSlug {
    pages(first: 10000) {
        edges {
            node {
                slug
            }
        }
    }
}

query PostByUri($uri: ID!) {
    page(idType: URI, id: $uri) {
        id
        title
        content
        featuredImage {
            node {
                sourceUrl
            }
        }
    }
}

query AllPosts {
    posts(first: 20, where: { orderby: { field: DATE, order: DESC } }) {
        edges {
            node {
                title
                excerpt
                slug
                date
                featuredImage {
                    node {
                        sourceUrl
                    }
                }
                author {
                    node {
                        name
                        firstName
                        lastName
                        avatar {
                            url
                        }
                    }
                }
            }
        }
    }
}

fragment AuthorFields on User {
    name
    firstName
    lastName
    avatar {
        url
    }
}

fragment PostFields on Post {
    title
    excerpt
    slug
    date
    featuredImage {
        node {
            sourceUrl
        }
    }
    author {
        node {
            ...AuthorFields
        }
    }
    categories {
        edges {
            node {
                name
            }
        }
    }
    tags {
        edges {
            node {
                name
            }
        }
    }
}

# For Draft Post
query DraftPostBySlug($id: ID!) {
    post(id: $id, idType: DATABASE_ID) {
        ...PostFields
        content
    }
}

# For Published Post and More Posts
query PublishedPostAndMorePosts($slug: ID!) {
    post(id: $slug, idType: SLUG) {
        ...PostFields
        content
        revisions(first: 1, where: { orderby: { field: MODIFIED, order: DESC } }) {
            edges {
                node {
                    title
                    excerpt
                    content
                    author {
                        node {
                            ...AuthorFields
                        }
                    }
                }
            }
        }
    }
    posts(first: 4, where: { orderby: { field: DATE, order: DESC } }) {
        edges {
            node {
                ...PostFields
            }
        }
    }
}


query UnpublishedPosts {
    posts(first: 100, where: { status: PRIVATE }) {
        edges {
            node {
                id
                title
                slug
                status
            }
        }
    }
}

mutation GetGraphQLToken($username: String!, $password: String!) {
    login(input: {
        clientMutationId: "uniqueId",
        username: $username,
        password: $password,
    }) {
        refreshToken
    }
}
